
Analysis Description
--------------------
BUSTED (branch-site unrestricted statistical test of episodic
diversification) uses a random effects branch-site model fitted jointly
to all or a subset of tree branches in order to test for alignment-wide
evidence of episodic diversifying selection. Assuming there is evidence
of positive selection (i.e. there is an omega > 1), BUSTED will also
perform a quick evidence-ratio style analysis to explore which
individual sites may have been subject to selection. v2.0 adds support
for synonymous rate variation, and relaxes the test statistic to 0.5
(chi^2_0 + chi^2_2). Version 2.1 adds a grid search for the initial
starting point. Version 2.2 changes the grid search to LHC, and adds an
initial search phase to use adaptive Nedler-Mead. Version 3.0 implements
the option for branch-site variation in synonymous substitution rates.
Version 3.1 adds HMM auto-correlation option for SRV, and binds SRV
distributions for multiple branch sets. Version 4.0 adds support for
multiple hits (MH), ancestral state reconstruction saved to JSON, and
profiling of branch-site level support for selection / multiple hits.
Version 4.2 adds calculation of MH-attributable fractions of
substitutions. Version 4.5 adds an 'error absorption' component
[experimental] 

- __Requirements__: in-frame codon alignment and a phylogenetic tree (optionally annotated
with {})

- __Citation__: *Gene-wide identification of episodic selection*, Mol Biol Evol.
32(5):1365-71, *Synonymous Site-to-Site Substitution Rate Variation
Dramatically Inflates False Positive Rates of Selection Analyses: Ignore
at Your Own Peril*, Mol Biol Evol. 37(8):2430-2439

- __Written by__: Sergei L Kosakovsky Pond

- __Contact Information__: spond@temple.edu

- __Analysis Version__: 4.5


>code => Universal
/home/malaevleo/batecmreg_trees/NP_036597.1_aligned_codon_alignment.fasta_pruned.nwk
batecmreg_trees/NP_036597.1_aligned_codon_alignment.fasta_pruned.nwk

>Loaded a multiple sequence alignment with **17** sequences, **954** codons, and **1** partitions from `/home/malaevleo/batecmreg_pal2nal/NP_036597.1_aligned_codon_alignment.fasta`

>branches => Foreground

>srv => Yes
The number omega rate classes to include in the model (permissible range = [1,10], default value = 3, integer): 
>rates => 3

>multiple-hits => None
The number alpha rate classes to include in the model [1-10, default 3] (permissible range = [1,10], default value = 3, integer): 
>syn-rates => 3

>error-sink => Yes
The number of points in the initial distributional guess for likelihood fitting (permissible range = [1,10000], default value = 250, integer): 
>grid-size => 250
The number of initial random guesses to 'seed' rate values optimization (permissible range = [1,25], default value = 1, integer): 
>starting-points => 1


### Branches to test for selection in the BUSTED analysis
* Selected 6 branches to test in the BUSTED analysis: `rfXP_032985650_1, drXP_024418977_2, mbXP_005885528_1, mlXP_006090051_1, mdXP_059516920_1, mmXP_036193225_1`


### Obtaining branch lengths and nucleotide substitution biases under the nucleotide GTR model

>kill-zero-lengths => Yes
* Log(L) = -37292.55, AIC-c = 74663.17 (39 estimated parameters)
* 1 partition. Total tree length by partition (subs/site) 1461286.298

### Obtaining the global omega estimate based on relative GTR branch lengths and nucleotide substitution biases
* Log(L) = -19562.63, AIC-c = 39219.54 (47 estimated parameters)
* 1 partition. Total tree length by partition (subs/site) 2773278.262
* non-synonymous/synonymous rate ratio for *background* =   0.0000
* non-synonymous/synonymous rate ratio for *test* =   0.0000

### Improving branch lengths, nucleotide substitution biases, and global dN/dS ratios under a full codon model
Error:
Internal error 
Internal error in _LikelihoodFunction::ConjugateGradientDescent. The function evaluated at current parameter values [-19565.78185376009] does not match the last recorded LF maximum [-19562.63274495171]. To treat numerical errors as warnings, please specify "ENV=TOLERATE_NUMERICAL_ERRORS=1;" as the command line argument. This often resolves the issue, which is indicative of numerical instability.

Function call stack
1 :  [namespace = tphJewdG] Optimize(mles, likelihoodFunction, option[utility.getGlobalValue("terms.run_options.optimization_settings")]);
-------
2 :  [namespace = qjutWcnC] return estimators.FitCodonModel(codon_data,tree,"models.codon.MG_REV.ModelDescription",genetic_code,option,initial_values);
-------
3 :  busted.final_partitioned_mg_results=estimators.FitMGREV(busted.filter_names,busted.trees,busted.codon_data_info[terms.code],{terms.run_options.model_type:terms.local,terms.run_options.partitioned_omega:busted.selected_branches,terms.run_options.apply_user_constraints:busted.zero_branch_length_constrain,terms.run_options.optimization_settings:{"OPTIMIZATION_METHOD":"hyrbid"}},busted.partitioned_mg_results);
-------

Check errors.log for execution error details.
